apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'

android {
    signingConfigs {
        release {
            keyAlias 'reprime'
            keyPassword 'reprime'
            storeFile file('reprime.jks')
            storePassword 'reprime'
        }
    }
    compileSdkVersion androidVersions.compile_sdk_version

    def code = 78
    def name = "7.9.9"

    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.royalenfield.reprime"
        minSdkVersion androidVersions.min_sdk_version
        targetSdkVersion androidVersions.target_sdk_version

        versionCode code
        versionName name
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    sonarqube {
        properties {
            property "sonar.projectName", "re-prime-mobile-android"
            property "sonar.projectKey", "re-prime-mobile-android"
            property "sonar.sources", "src"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.test.inclusions", "**/*Test*/**"
            property "sonar.exclusions", '**/.gradle/**,' +
                    "**/androidTest/**," +
                    "**/R.class," +
                    "**/BuildConfig.*," +
                    "**/Manifest*.*," +
                    "**/android/databinding/*," +
                    "**/androidx/databinding/*," +
                    "**/*MapperImpl*.*," +
                    "**/BuildConfig.*," +
                    "**/Manifest*.*," +
                    "**/google-services.json,"+ "**/assets/**"
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    flavorDimensions "server"
    productFlavors {
        dev {
            resValue "string", "host", "royalenfield.test-app.link"
            resValue "string", "host_alter", "royalenfield-alternate.test-app.link"
            dimension "server"
        }
        uat {
            resValue "string", "host", "royalenfield.test-app.link"
            resValue "string", "host_alter", "royalenfield-alternate.test-app.link"
            dimension "server"
        }
        production {
            resValue "string", "host", "royalenfield.app.link"
            resValue "string", "host_alter", "royalenfield-alternate.app.link"
            dimension "server"
        }
        devApac {
            applicationId "com.apac.royalenfield.reprime"
            resValue "string", "host", "royalenfieldapac.test-app.link"
            resValue "string", "host_alter", "royalenfieldapac-alternate.test-app.link"
            dimension "server"
        }

        productionApac {
            applicationId "com.apac.royalenfield.reprime"
            resValue "string", "host", "royalenfieldapac.app.link"
            resValue "string", "host_alter", "royalenfieldapac-alternate.app.link"
            dimension "server"
        }

        devLatm {
            applicationId "com.latm.royalenfield.reprime"
            resValue "string", "host", "royalenfieldlatm.test-app.link"
            resValue "string", "host_alter", "royalenfieldlatm-alternate.test-app.link"
            dimension "server"
        }

        productionLatm {
            applicationId "com.latm.royalenfield.reprime"
            resValue "string", "host", "royalenfieldlatm.app.link"
            resValue "string", "host_alter", "royalenfieldlatm-alternate.app.link"
            dimension "server"
        }

        devRena {
            applicationId "com.rena.royalenfield.reprime"
            resValue "string", "host", "royalenfieldrena.test-app.link"
            resValue "string", "host_alter", "royalenfieldrena-alternate.test-app.link"
            dimension "server"
        }

        productionRena {
            applicationId "com.rena.royalenfield.reprime"
            resValue "string", "host", "royalenfieldrena.app.link"
            resValue "string", "host_alter", "royalenfieldrena-alternate.app.link"
            resValue "string", "host_alter", "royalenfieldapac-alternate.app.link"
            dimension "server"
        }

        devEU {
            applicationId "com.eu.royalenfield.reprime"
            resValue "string", "host", "royalenfieldeu.test-app.link"
            resValue "string", "host_alter", "royalenfieldeu-alternate.test-app.link"
            dimension "server"
        }
        uatEU {
            applicationId "com.eu.royalenfield.reprime"
            resValue "string", "host", "royalenfieldeu.test-app.link"
            resValue "string", "host_alter", "royalenfieldeu-alternate.test-app.link"
            dimension "server"
        }
        productionEU {
            applicationId "com.eu.royalenfield.reprime"
            resValue "string", "host", "royalenfieldeu.app.link"
            resValue "string", "host_alter", "royalenfieldeu-alternate.app.link"
            dimension "server"
        }
    }

    sourceSets {
        dev {
            res {
                srcDir 'config/dev/res/'
            }
        }
        uat {
            res {
                srcDir 'config/uat/res/'
            }
        }
        production {
            res {
                srcDir 'config/production/res/'
            }
        }

        devApac {
            res {
                srcDir 'config/devapac/res/'
            }
        }
        productionApac {
            res {
                srcDir 'config/productionapac/res/'
            }
        }

        devLatm {
            res {
                srcDir 'config/devlatm/res/'
            }
        }
        productionLatm {
            res {
                srcDir 'config/productionlatm/res/'
            }
        }

        devRena {
            res {
                srcDir 'config/devrena/res/'
            }
        }
        productionRena {
            res {
                srcDir 'config/productionrena/res/'
            }
        }

        devEU {
            res {
                srcDir 'config/deveu/res/'
            }
        }
        uatEU {
            res {
                srcDir 'config/uat/res/'
            }
        }
        productionEU {
            res {
                srcDir 'config/productioneu/res/'
            }
        }
    }
    dexOptions {
        incremental = true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    dataBinding {
        enabled true
    }
}

task copyResDirectoryToClasses(type: Copy) {
    from "${projectDir}/src/test/res"
    into "${buildDir}/intermediates/classes/test/debug/res"
}
repositories {
    maven { url "https://salesforce-marketingcloud.github.io/MarketingCloudSDK-Android/repository" }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Optional -- Mockito framework
    //testImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation "org.mockito:mockito-android:2.7.22"
    testImplementation 'org.powermock:powermock-api-mockito:1.6.5'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.5'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.2.0'


    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // retrofit, gson
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converter_jackson
    implementation retrofitDependencies.converter_scalars
    implementation retrofitDependencies.converter_gson
    implementation 'com.caverock:androidsvg-aar:1.4'

    //Facebook login sdk
    implementation 'com.facebook.android:facebook-login:4.38.1'
    //implementation 'com.jakewharton.RELog:RELog:4.7.1'

    implementation playServiceDependencies.location //user for FusedLocationProvider
    implementation playServiceDependencies.maps
    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.5.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.jakewharton:butterknife:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'
    //calendar dependencies
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'
    implementation project(path: ':calendar-library')
    implementation project(path: ':stomplib')
    implementation project(path: ':ViewLib')
    //phone configurator
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

    implementation 'com.github.mukeshsolanki:android-otpview-pinview:2.1.0'


    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    implementation 'com.android.support:multidex:1.0.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.0.1'

    //Stomp Web socket dependency
   // implementation 'com.github.NaikSoftware:StompProtocolAndroid:1.6.4'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    /*Library for Multi device support */
    //implementation 'com.intuit.sdp:sdp-android:1.0.6'
    //implementation 'com.intuit.ssp:ssp-android:1.0.6'


    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'


    dependencies {
        // Import the BoM for the Firebase platform
        implementation platform('com.google.firebase:firebase-bom:28.4.1')

        // Declare the dependencies for the Remote Config and Analytics libraries
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation 'com.google.firebase:firebase-config'
        implementation 'com.google.firebase:firebase-analytics'
        implementation 'com.google.firebase:firebase-firestore'
        implementation 'com.google.firebase:firebase-messaging'
        implementation 'com.google.firebase:firebase-database'
        implementation 'com.google.firebase:firebase-dynamic-links'
        implementation ('com.google.firebase:firebase-auth')
        {
            exclude module: "play-services-safetynet"
        }
        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-perf'
    }
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.android.installreferrer:installreferrer:2.1'

    // Lifecycles only (without ViewModel or LiveData)
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.2.0"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:2.2.0"

//    implementation 'com.auth0.android:jwtdecode:2.0.0'
    implementation 'com.firebase:geofire-android-common:3.1.0'

    //Mapbox
/*
    implementation mapboxDependencies.navigation
    implementation mapboxDependencies.android_services
    implementation mapboxDependencies.geojson
*/

    implementation cloudDependencies.swagger
    implementation cloudDependencies.annotations
    implementation(cloudDependencies.cognitoSdk) { transitive = true }
    implementation cloudDependencies.customTabs
    implementation cloudDependencies.gsonFire
//    implementation cloudDependencies.oauthClient

    implementation 'net.danlew:android.joda:2.10.3'

    // BILA Core
    implementation "androidx.core:core:1.3.2"
    implementation "androidx.annotation:annotation:1.1.0"
    // Midgard Dependencies
    // Midgard Core
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "com.google.android.gms:play-services-location:20.0.0"
    // Navigation
    implementation "com.mapbox.mapboxsdk:mapbox-android-navigation:0.42.6"
    implementation "com.google.android.gms:play-services-tagmanager:17.0.0"
    // Theseus
    implementation jetpackDependencies.room_runtime
    annotationProcessor jetpackDependencies.room_compiler
    implementation jetpackDependencies.room_ktx
    implementation jetpackDependencies.room_testing
    // Nephele
    implementation project(':Nephele')
    //branch.io
    implementation 'io.branch.sdk.android:library:5.2.0'
    implementation "com.naver.android.helloyako:imagecropview:1.2.3"
    implementation "androidx.security:security-crypto:1.1.0-alpha01"
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
    implementation 'com.google.android.play:core:1.10.0'
    implementation 'com.google.maps.android:android-maps-utils:2.2.0'
    // Barcode scanning API
    implementation 'com.google.mlkit:barcode-scanning:17.0.0'


    def camerax_version = '1.0.0-rc01'
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation ('com.salesforce.marketingcloud:marketingcloudsdk:8.0.8'){
        exclude group: 'androidx.constraintlayout'
    }

    implementation 'androidx.camera:camera-view:1.0.0-alpha20'
    implementation 'com.google.android.gms:play-services-auth:20.4.0'
    implementation 'com.google.android.gms:play-services-identity:17.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.4.0'
    implementation 'com.google.android.gms:play-services-base:17.3.0'

}
apply plugin: 'com.google.gms.google-services'
